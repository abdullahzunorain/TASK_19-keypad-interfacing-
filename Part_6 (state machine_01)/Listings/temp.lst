C51 COMPILER V9.60.7.0   TEMP                                                              09/23/2024 13:11:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\temp.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\temp
                    -.lst) TABS(2) OBJECT(.\Objects\temp.obj)

line level    source

   1          #include <reg51.h>
   2          #include "TEMP.h"
   3          #include "LCD.h"
   4          #include <string.h>
   5          
   6          
   7          sbit A= P2^2;
   8          sbit D= P2^3;
   9          sbit C= P2^4;
  10          
  11          unsigned int index=0;
  12          unsigned char temp_lsb=0; temp_msb=0;
  13          unsigned char unit, ten, hundred, intpart, decpart;
  14          char temp_f;
  15          unsigned char temp_c;
  16          sbit DQ=P3^7;
  17          sbit buzzer_pin=P1^5;
  18          
  19          
  20          
  21          void temp_serialdata_pc (void)
  22          {
  23   1        SBUF=hundred;
  24   1          while(TI==0);
  25   1            TI=0;
  26   1          delay(100);
  27   1          
  28   1            SBUF=ten;
  29   1          while(TI==0);                     //  tempdata send to pc
  30   1            TI=0;
  31   1          delay(100);
  32   1          
  33   1            SBUF=unit;
  34   1          while(TI==0);
  35   1            TI=0;
  36   1          delay(100);
  37   1          
  38   1        
  39   1        SBUF='\n';
  40   1          while(TI==0);
  41   1            TI=0;
  42   1          delay(100);
  43   1      } 
  44          
  45          
  46          
  47          
  48          void ow_reset (void)
  49          {
  50   1        DQ=1;
  51   1        delay_18B20(8);
  52   1        DQ=0;
  53   1        delay_18B20(65);
  54   1        DQ=1;
C51 COMPILER V9.60.7.0   TEMP                                                              09/23/2024 13:11:41 PAGE 2   

  55   1        delay_18B20(20);  
  56   1      }
  57          void delay_18B20 (unsigned int ud)
  58          {
  59   1        while(ud--);
  60   1      }
  61          unsigned char read_bytess (void)
  62          {
  63   1        unsigned char i=0;
  64   1        unsigned char dat=0;
  65   1        for(i=8; i>0; i--)
  66   1        {
  67   2          DQ=0;
  68   2          dat>>=1;
  69   2          DQ=1;
  70   2          if(DQ)
  71   2          
  72   2            dat |= 0x80;
  73   2            delay_18B20(4);
  74   2          
  75   2        }
  76   1        return(dat);
  77   1      }
  78          
  79          void write_bytess (char dat)
  80          {
  81   1        unsigned char i=0;
  82   1        for(i=8; i>0; i--)
  83   1        {
  84   2          DQ=0;
  85   2          DQ=dat&0x01;
  86   2          delay_18B20(5);
  87   2          DQ=1;
  88   2          dat>>=1;
  89   2        
  90   2        }
  91   1      }
  92          void read_temperature(void)
  93          {
  94   1        ow_reset();
  95   1        write_bytess(0xCC); // skip rom
  96   1        write_bytess(0x44); //start conversion measure temp and convert into digital
  97   1        delay_18B20(10);
  98   1        ow_reset();
  99   1        write_bytess(0xCC); // skip rom
 100   1        write_bytess(0xBE);// read scratchpad memory
 101   1        delay_18B20(10);
 102   1        
 103   1        temp_msb=read_bytess();
 104   1        temp_lsb=read_bytess();
 105   1        
 106   1        temp_c=((temp_lsb*256+temp_msb)>>4);
 107   1        temp_f=(((int)temp_c)*9)/5+32;
 108   1      }
 109          
 110          void hex2lcd (unsigned char z)
 111          {
 112   1        hundred=(z/100)+0x30;
 113   1        ten=(z%100/10)+0x30;
 114   1        unit=(z%10)+0x30;
 115   1        intpart=(int)z;
 116   1        decpart=(z-intpart)+0x30;
C51 COMPILER V9.60.7.0   TEMP                                                              09/23/2024 13:11:41 PAGE 3   

 117   1        
 118   1        lcd_char(hundred);
 119   1        lcd_char(ten);
 120   1        lcd_char(unit);
 121   1        lcd_string(".");
 122   1        lcd_char(decpart);
 123   1      }
 124          
 125            
 126          void temperature_state ()
 127          { 
 128   1        
 129   1        A=1; D=1; C=1;
 130   1        P0=0xFF;
 131   1        A=1; D=1; C=0;
 132   1        P0=0x79;
 133   1        
 134   1        lcd_init();
 135   1      
 136   1      
 137   1          
 138   1            
 139   1        //IE=0x82;
 140   1        EA=1;
 141   1        ET0=1;
 142   1        
 143   1        TMOD=0x21;
 144   1        SCON=0x50;                     
 145   1        TH1=0xFD;   // 9600
 146   1        TH0=0xFC;
 147   1        TL0=0x18;
 148   1        TR0=1;
 149   1        TR1=1;
 150   1        temp_serialdata_pc ();
 151   1      
 152   1      }
 153          
 154          
 155          
 156          
 157          
 158          
 159          
 160          
 161          
 162          
 163          
 164          
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    366    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
