C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/10/2024 12:36:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE CALCULATOR
OBJECT MODULE PLACED IN .\Objects\calculator.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE calculator.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\calculator.lst) TABS(2) OBJECT(.\Objects\calculator.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "CALCULATOR.h"
   4          #include <string.h>
   5          sbit r0 =P1^0;
   6          sbit r1 =P1^1;
   7          sbit r2 =P1^2;
   8          sbit r3 =P1^3;
   9          sbit c0 =P1^4;
  10          sbit c1 =P1^5;
  11          sbit c2 =P1^6;
  12          sbit c3 =P1^7;
  13          
  14          //char scan_key(void);
  15          
  16          int calculator_state(void)
  17          {
  18   1        
  19   1        
  20   1        unsigned int r=0;
  21   1        int k2,k1;
  22   1        char key, key1;
  23   1        unsigned char ch2;
  24   1        //lcd_init();
  25   1         lcd_set_cursor(0,0);
  26   1        lcd_string("Simplecalculator");
  27   1        
  28   1        key=scan_key();
  29   1        k2=get_num(key);
  30   1        lcd_set_cursor(1,0);
  31   1        lcd_char(key);
  32   1        
  33   1        
  34   1        ch2=scan_key();
  35   1        lcd_set_cursor(1,1);
  36   1        lcd_char(ch2);
  37   1        
  38   1        
  39   1        key1=scan_key();
  40   1        k1=get_num(key1);
  41   1        lcd_set_cursor(1,2);
  42   1        lcd_char(key1);
  43   1        lcd_set_cursor(1,3);
  44   1        lcd_string("=");
  45   1        lcd_set_cursor(1,4);
  46   1        
  47   1        switch(ch2)
  48   1        {
  49   2          case '+':
  50   2            disp_num(k1+k2);
  51   2          break;
  52   2          case '-':
  53   2            disp_num(k2-k1);
  54   2          break;
C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/10/2024 12:36:40 PAGE 2   

  55   2          case '*':
  56   2            disp_num(k2*k1);
  57   2          break;
  58   2          case '/':
  59   2            disp_num(k2/k1);
  60   2          break;  
  61   2        }
  62   1         return 0;
  63   1        while(scan_key()!=0);
  64   1      }
  65            
  66          char scan_key()
  67          {
  68   1        char keypressed='\0';
  69   1        while(!(keypressed == '0'|| keypressed == '1'|| keypressed == '2'|| keypressed == '3'||
  70   1                keypressed == '4'|| keypressed == '5'|| keypressed == '6'|| keypressed == '7'||
  71   1                keypressed == '8'|| keypressed == '9'|| keypressed == '-'|| keypressed == '*'|| 
  72   1                keypressed == '='|| keypressed == '+'|| keypressed == '/'|| keypressed == 'C' ))
  73   1      {
  74   2            r0=0; r1=1;r2=1;r3=1;
  75   2        if(c0==0 && r0==0){keypressed='+';}
  76   2        if(c1==0 && r0==0){keypressed='-';}
  77   2        if(c2==0 && r0==0){keypressed='*';}
  78   2        if(c3==0 && r0==0){keypressed='/';}
  79   2          
  80   2            r0=1; r1=0;r2=1;r3=1;
  81   2        if(c0==0 && r1==0){keypressed='=';}
  82   2        if(c1==0 && r1==0){keypressed='3';}
  83   2        if(c2==0 && r1==0){keypressed='6';}
  84   2        if(c3==0 && r1==0){keypressed='9';}
  85   2        
  86   2            r0=1; r1=1;r2=0;r3=1;
  87   2        if(c0==0 && r2==0){keypressed='0';}
  88   2        if(c1==0 && r2==0){keypressed='2';}
  89   2        if(c2==0 && r2==0){keypressed='5';}
  90   2        if(c3==0 && r2==0){keypressed='8';}
  91   2          
  92   2            r0=1; r1=1;r2=1;r3=0;
  93   2        if(c0==0 && r3==0){keypressed='C';}
  94   2        if(c1==0 && r3==0){keypressed='1';}
  95   2        if(c2==0 && r3==0){keypressed='4';}
  96   2        if(c3==0 && r3==0){keypressed='7';}
  97   2      }
  98   1            delay(500);
  99   1        return keypressed;
 100   1      }
 101          int get_num (char ch)
 102          {
 103   1        switch(ch)
 104   1        {
 105   2          case '0': return 0; break;
 106   2          case '1': return 1; break;
 107   2          case '2': return 2; break;
 108   2          case '3': return 3; break;
 109   2          case '4': return 4; break;
 110   2          case '5': return 5; break;
 111   2          case '6': return 6; break;
 112   2          case '7': return 7; break;
 113   2          case '8': return 8; break;
 114   2          case '9': return 9; break;
 115   2        }
 116   1        return 0;
C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/10/2024 12:36:40 PAGE 3   

 117   1      }
 118          void disp_num(float num)
 119          {
 120   1        unsigned char unitdigit =0;
 121   1        unsigned char tenthdigit =0;
 122   1        unsigned char decimal =0;
 123   1        int j;
 124   1        int numb;
 125   1         j=(int)(num*10);
 126   1           numb=(int)num;
 127   1         
 128   1        if(numb<0)
 129   1        {
 130   2          numb=-1*numb;
 131   2          lcd_char('-');
 132   2        }   
 133   1        tenthdigit=(numb/10);
 134   1        if(tenthdigit!=0)
 135   1        
 136   1          lcd_char(tenthdigit+0x30);
 137   1          unitdigit=numb - tenthdigit*10;
 138   1        lcd_char(unitdigit+0x30);
 139   1        lcd_char('.');
 140   1        decimal=(j%10)+0x30;
 141   1        lcd_char(decimal);
 142   1        delay(2000);
 143   1        
 144   1        
 145   1      }
 146          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    791    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
